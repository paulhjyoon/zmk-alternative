/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,console = &cdc_acm_uart;
		zmk,underglow = &led_strip;
        zmk,backlight = &back_led_backlight;
		/*zmk,battery   = &vbatt; */
		zmk,underglow-indicators = &underglow_indicators;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <14>;
		rows = <6>;
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)                                                                    RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                                                    RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                                                    RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)                                                    RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(0,6) RC(1,6) RC(2,6)   RC(2,7) RC(1,7)  RC(0,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4)         RC(3,6) RC(4,6) RC(5,6)   RC(5,7) RC(4,7)  RC(3,7)         RC(5,9) RC(5,10) RC(5,11) RC(5,12) RC(5,13)
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
			row-gpios
		= <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW1
		, <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW2
		, <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW3
		, <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW4
		, <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW5
		, <&gpio1 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // LH ROW6
		;
	col-gpios
		= <&gpio1 8 GPIO_ACTIVE_HIGH> // LH COL6
		, <&gpio1 4 GPIO_ACTIVE_HIGH> // LH COL5
		, <&gpio1 6 GPIO_ACTIVE_HIGH> // LH COL4
		, <&gpio1 7 GPIO_ACTIVE_HIGH> // LH COL3
		, <&gpio1 5 GPIO_ACTIVE_HIGH> // LH COL2
		, <&gpio1 3 GPIO_ACTIVE_HIGH> // LH COL1
		, <&gpio1 1 GPIO_ACTIVE_HIGH> // LH Thumb
		;

		diode-direction = "col2row";
		debounce-press-ms = <4>;
		debounce-release-ms = <20>;

	back_led_backlight: pwmleds {
		compatible = "pwm-leds";
		label = "BACK LED";
		pwm_led_0 {
			pwms = <&pwm0 47>; 
			label = "Back LED configured as backlight";
		};
	};
	underglow_indicators: underglow-indicators {
		compatible  = "zmk,underglow-indicators";
		layer-state = <35 29 23 17 11 6>;
		bat-lhs     = <36 30 24 18 12 7>;
		bat-rhs     = <37 31 25 19 13 8>;
		capslock    = <22>;
		numlock     = <16>;
		scrolllock  = <10>;
		ble-state   = <3 4 0 1>;
		usb-state   = <5>;
		output-fallback = <15>;
	};
};

};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};



&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <27>; /* WS2812_VEXT_DATA */
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <13>; /* Must select a not connected pin */
	miso-pin = <14>; /* Must select a not connected pin */

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812C-2020";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <40>; /* 40 keys have underglow at the moment */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;

		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};
